// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieReviewAPI.Models;

namespace MovieReviewAPI.Migrations
{
    [DbContext(typeof(MovieAPIDbContext))]
    partial class MovieAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieReviewAPI.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actor")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DateReleased")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MovieImage")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MovieVideo")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("MovieId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MovieReviewAPI.Models.MovieComment", b =>
                {
                    b.Property<int>("MovieCommentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("MovieId");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MovieCommentId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieComment");
                });

            modelBuilder.Entity("MovieReviewAPI.Models.MovieRating", b =>
                {
                    b.Property<int>("MovieRatingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("MovieId");

                    b.Property<int>("Rating");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MovieRatingId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieRating");
                });

            modelBuilder.Entity("MovieReviewAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MovieReviewAPI.Models.MovieComment", b =>
                {
                    b.HasOne("MovieReviewAPI.Models.Movie", "Movie")
                        .WithMany("MovieComment")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Movie_Id");
                });

            modelBuilder.Entity("MovieReviewAPI.Models.MovieRating", b =>
                {
                    b.HasOne("MovieReviewAPI.Models.Movie", "Movie")
                        .WithMany("MovieRating")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_MovieId");
                });
#pragma warning restore 612, 618
        }
    }
}
